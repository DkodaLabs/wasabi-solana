name: Anchor Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SOLANA_VERSION: "1.18.22"
  ANCHOR_VERSION: "0.30.1"
  RUST_TOOLCHAIN: "1.79.0"
  AGAVE: "/home/runner/.local/share/agave/target/debug"
  SOLANA_INSTALL_PATH: "/home/runner/.local/share/solana/install/active_release"
  SOLANA_SDK_PATH: "/home/runner/.local/share/solana/install/active_release/bin/solana/sdk"
  SOLANA_BIN_PATH: "/home/runner/.local/share/solana/install/active_release/bin"
  CARGO_HOME: "/home/runner/.cargo"

jobs:
  test:
    name: Run Anchor Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: "node_modules"
          key: node_modules-${{ hashFiles('package-lock.json') }}

      - name: Cache Rust Dependencies
        id: cache-rust
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-rust-${{ env.RUST_TOOLCHAIN }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-rust-${{ env.RUST_TOOLCHAIN }}-

      - name: Install Rust
        if: steps.cache-rust.outputs.cache-hit != 'true'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          profile: minimal
          components: rustfmt, clippy
          targets: wasm32-unknown-unknown

      - name: Set Rust Default Version
        run: |
          rustup default ${{ env.RUST_TOOLCHAIN }}
          rustup override set ${{ env.RUST_TOOLCHAIN }}
          echo "After setting default and override:"
          rustc --version
          rustup show active-toolchain

      - name: Cache Solana
        id: cache-solana
        uses: actions/cache@v4
        with:
          path: |
            ~/.local/share/solana/install/
            ~/.config/solana/
          key: ${{ runner.os }}-solana-${{ env.SOLANA_VERSION }}

      - name: Install Solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
          echo "${{ env.SOLANA_BIN_PATH }}" >> $GITHUB_PATH
          export PATH="${{ env.SOLANA_BIN_PATH }}:$PATH"
          solana --version

      - name: Setup Solana Path
        run: |
          echo "${{ env.SOLANA_BIN_PATH }}" >> $GITHUB_PATH
          solana-keygen new --no-bip39-passphrase

      - name: Cache Anchor
        id: cache-anchor
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/anchor
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-anchor-${{ env.ANCHOR_VERSION }}

      - name: Install Anchor CLI
        if: steps.cache-anchor.outputs.cache-hit != 'true'
        run: |
          cargo install --git https://github.com/coral-xyz/anchor --tag v${{ env.ANCHOR_VERSION }} anchor-cli --locked
          
      - name: Install node dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install

      - name: Run tests
        run: |
          echo "Current PATH: $PATH"
          which anchor || echo "anchor not found"
          anchor test
